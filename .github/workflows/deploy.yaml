name: Workflow docker compose

on: 
  push:
    branches:
      - main

jobs:
  deploy-compose:
    runs-on: ubuntu-latest
    steps:
      - name: Clonar repositorio
        uses: actions/checkout@v4

      - name: Configurando y conectando al servidor de DigitalOcean...
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H -t rsa 67.207.84.219 >> ~/.ssh/known_hosts
      
      - name: verificando contenido de ~/.ssh/id_rsa
        run: |
          ls -l ~/.ssh
          cat ~/.ssh/id_rsa

      - name: Conectando y desplegando el compose...
        run: |
          ssh -i ~/.ssh/id_rsa root@67.207.84.219 << 'EOF'
            set -e  # Terminar el script si algÃºn comando falla
            mkdir -p /root/codigo/docker-scale-python-LJRG
            cd /root/codigo/docker-scale-python-LJRG
            if [ ! -d ".git" ]; then
              git clone git@github.com:usuario/docker-scale-python-LJRG.git .
            fi
            git fetch origin main
            git reset --hard origin/main
            docker compose down || docker-compose down
            docker compose up -d --build || docker-compose up -d --build
          EOF

# name: Workflow docker compose

# on: 
#   push:
#     branches:
#       - main

# jobs:
#   deploy-compose:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Clonar repositorio
#         uses: actions/checkout@v4

#       - name: Configurando y conectando al servidor de digital ocean...
#         run: |
#           mkdir -p ~/.ssh
#           echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
#           chmod 600 ~/.ssh/id_rsa
#           ssh-keyscan -H 67.207.84.219 >> ~/.ssh/known_hosts
      
#       - name: Conectando y desplegando el compose...
#         run: |
#           ssh -i  ~/.ssh/id_rsa root@67.207.84.219 << 'EOF'
#             mkdir -p /root/codigo/docker-scale-python-LJRG
#             cd /root/codigo/docker-scale-python-LJRG
#             git pull origin main
#             docker compose down
#             docker compose up -d --build
#           EOF

